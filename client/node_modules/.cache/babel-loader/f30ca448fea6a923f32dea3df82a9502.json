{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, ADD_TO_CART, UPDATE_CART_QUANTITY, REMOVE_FROM_CART, ADD_MULTIPLE_TO_CART, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, CLEAR_CART, TOGGLE_CART } from './actions';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products]\n      };\n      A;\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        })\n      };\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  _s();\n  return useReducer(reducer, initialState);\n}\n_s(useProductReducer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","cartOpen","cart","product","A","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","useProductReducer","initialState"],"sources":["/Users/stevecalla/du_coding/projects/shop-shop-stripe/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };A\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SACEC,eAAe,EACfC,WAAW,EACXC,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,iBAAiB,EACjBC,uBAAuB,EACvBC,UAAU,EACVC,WAAW,QACN,WAAW;AAElB,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKZ,eAAe;MAClB,OAAO;QACL,GAAGU,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAQ;MAC/B,CAAC;IAEH,KAAKZ,WAAW;MACd,OAAO;QACL,GAAGS,KAAK;QACRI,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAI,EAAEJ,MAAM,CAACK,OAAO;MACtC,CAAC;IAEH,KAAKZ,oBAAoB;MACvB,OAAO;QACL,GAAGM,KAAK;QACRK,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAI,EAAE,GAAGJ,MAAM,CAACE,QAAQ;MAC1C,CAAC;MAACI,CAAC;IACL,KAAKf,oBAAoB;MACvB,OAAO;QACL,GAAGQ,KAAK;QACRI,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAEL,KAAK,CAACK,IAAI,CAACG,GAAG,CAAEF,OAAO,IAAK;UAChC,IAAIL,MAAM,CAACQ,GAAG,KAAKH,OAAO,CAACG,GAAG,EAAE;YAC9BH,OAAO,CAACI,gBAAgB,GAAGT,MAAM,CAACS,gBAAgB;UACpD;UACA,OAAOJ,OAAO;QAChB,CAAC;MACH,CAAC;IAEH,KAAKb,gBAAgB;MACnB,IAAIkB,QAAQ,GAAGX,KAAK,CAACK,IAAI,CAACO,MAAM,CAAEN,OAAO,IAAK;QAC5C,OAAOA,OAAO,CAACG,GAAG,KAAKR,MAAM,CAACQ,GAAG;MACnC,CAAC,CAAC;MAEF,OAAO;QACL,GAAGT,KAAK;QACRI,QAAQ,EAAEO,QAAQ,CAACE,MAAM,GAAG,CAAC;QAC7BR,IAAI,EAAEM;MACR,CAAC;IAEH,KAAKd,UAAU;MACb,OAAO;QACL,GAAGG,KAAK;QACRI,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE;MACR,CAAC;IAEH,KAAKP,WAAW;MACd,OAAO;QACL,GAAGE,KAAK;QACRI,QAAQ,EAAE,CAACJ,KAAK,CAACI;MACnB,CAAC;IAEH,KAAKT,iBAAiB;MACpB,OAAO;QACL,GAAGK,KAAK;QACRc,UAAU,EAAE,CAAC,GAAGb,MAAM,CAACa,UAAU;MACnC,CAAC;IAEH,KAAKlB,uBAAuB;MAC1B,OAAO;QACL,GAAGI,KAAK;QACRe,eAAe,EAAEd,MAAM,CAACc;MAC1B,CAAC;IAEH;MACE,OAAOf,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,SAASgB,iBAAiB,CAACC,YAAY,EAAE;EAAA;EAC9C,OAAO5B,UAAU,CAACU,OAAO,EAAEkB,YAAY,CAAC;AAC1C;AAAC,GAFeD,iBAAiB"},"metadata":{},"sourceType":"module"}