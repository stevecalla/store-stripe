{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n(function (DocumentType) {\n  DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n  DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n  DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n  var name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\nexport function parser(document) {\n  var cached = cache.get(document);\n  if (cached) return cached;\n  var variables, type, name;\n  __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") + \"DocumentNode. You may need to use 'graphql-tag' or another method \" + \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 32);\n  var fragments = [];\n  var queries = [];\n  var mutations = [];\n  var subscriptions = [];\n  for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n    var x = _a[_i];\n    if (x.kind === 'FragmentDefinition') {\n      fragments.push(x);\n      continue;\n    }\n    if (x.kind === 'OperationDefinition') {\n      switch (x.operation) {\n        case 'query':\n          queries.push(x);\n          break;\n        case 'mutation':\n          mutations.push(x);\n          break;\n        case 'subscription':\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n  __DEV__ ? invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, \"Passing only a fragment to 'graphql' is not yet supported. \" + \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, 33);\n  __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" + \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") + \"subscriptions and \".concat(mutations.length, \" mutations. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 34);\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n  var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n  __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") + \"\".concat(definitions.length, \" definitions. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 35);\n  var definition = definitions[0];\n  variables = definition.variableDefinitions || [];\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data';\n  }\n  var payload = {\n    name: name,\n    type: type,\n    variables: variables\n  };\n  cache.set(document, payload);\n  return payload;\n}\nexport function verifyDocumentType(document, type) {\n  var operation = parser(document);\n  var requiredOperationName = operationName(type);\n  var usedOperationName = operationName(operation.type);\n  __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") + \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 36);\n}","map":{"version":3,"names":["invariant","DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","cached","get","variables","__DEV__","kind","concat","fragments","queries","mutations","subscriptions","_i","_a","definitions","length","x","push","operation","definition","variableDefinitions","value","payload","set","verifyDocumentType","requiredOperationName","usedOperationName"],"sources":["/Users/stevecalla/du_coding/projects/shop-shop-stripe/client/node_modules/@apollo/client/react/parser/index.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 32);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var x = _a[_i];\n        if (x.kind === 'FragmentDefinition') {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === 'OperationDefinition') {\n            switch (x.operation) {\n                case 'query':\n                    queries.push(x);\n                    break;\n                case 'mutation':\n                    mutations.push(x);\n                    break;\n                case 'subscription':\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    __DEV__ ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 33);\n    __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") +\n        \"subscriptions and \".concat(mutations.length, \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 34);\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") +\n        \"\".concat(definitions.length, \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 35);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\nexport function verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") +\n        \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 36);\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}